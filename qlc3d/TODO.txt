19. Make use of solver settings more flexible: Should not be necessary to specify all   	    solver settings, only to override non-default ones. 
    
18. Gloabal coordinate comparison numerical accuracy could be made user definable
    in a settings file. Currently it is set at top of qlc3d.cpp

   
16. Reader incorrectly returns SUCCESS when trying to read single number, when actually
    value is array of numbers.

15. Check need for LC surface integrals with 3 elastic coeffs. e.g. 2D case with neumann boundaries, single K vs 3K edge effects (13/01/12)

14. Creation of regular grid interpolation table is slow and may not work
	in cases where LC regions are disconnected.


4.  Interpolation is simplified -> uniaxial interpolation. should
    interpolate each eigenvector/eigenvalue istead

============ DONE ==============================
10. Potential calculation is done even when not needed.
    Also, dont make a potential matrix when not needed.
      DONE (18/11/12). When Electrodes.CalcPot flag is false, an empty
      potential matrix is constructed and potential values are either 
      all 0 or as specified by constant E-field. This requires removing
      all Electrodes from the settings file.

7.  Integrate SparseLib so that the modified SparseLib class files are 
    kept with qlc3d.
    Using SpaMtrix instead if SpearseLib now.

17. Reading of material parameters - when p0 is not defined its value should be assumed 	    to be 0, not causing an error
    fixed (29/09/12)

13. Interpolation function does not give preference to LC tets.
    This results in som dielectric-LC interface nodes being reported as
    dielectric -> regular grid nodes without director.
    13/1/12 - added ugly boolean switches that determine whether looking for LC element only or not.

15. Custom SaveDir creation does not seem to work (11/1/12)
    fixed (13/1/12)

12. Energy calculation crashes in "initialise shape files"-function
    when not in debug mode. Adding a printf in loop stops crash.
    Check with Valgrind!
	04/01/2012 - done. Seems to have been an optimzation related issue (level -O3). 
	Added compiler flag: -fno-tree-vectorize to fix it. 

11. Remove dependencies to Qt, it is annoying. Create own 'filesystem' class
    that deals with creating directories on different OSs. 
	07/11/2011 - done. filesystem functions in filesysfun.h and filesysfun.cpp
	
9.  Periodic boundaries in mesh refinement.
	05/06/2011 - done, but not fully tested.
	
8.  Periodic boundaries for a full box. Currently only periodic side boundaries exist.
    Add top/bottom periodic boundaries.
    03/06/2011 - done and seems to work.


5.  After autorefinement, the order at some nodes (in non-refined and refined regions)
    start to increase.
    - Seems not to happen when only a single refinement iteration is used.
    12/01/11 - Fixed (by the looks of it, anyways). Problem was in interpolation between meshes.
    In some cases element in source mesh that contained the new node was identified incorrectly
    as a non-LC element. This resulted in reading director/order param values from wrong memory
    locations. Checking for this was added and the program seems much happier.
    ...Actually problem was with not resizing potential vector -> junk potential data in new nodes.


6.  Make changes to SparseLib so that duplicate copies of all data is not made. This should speed things up
    a lot and allow for larger meshes to be ran on 32bit machines. Change by adding new constructor for
    double vector in "mvvd.h" and "mvvd.cpp".
    - Done, needs testing on win32 machine. Also, see #7.


3.  Surface normal calculation does not get normal always correct in
    all positionafter a refinement (test with droplet).
    09/01/11 - Works now. Surface normal was calculated correctly, but
    cal to setStrongSurfaces was missing.

2.  Interpolation of results between different meshes goes crazy sometimes, sometimes not.
    I.E. first ~3 refinements seem OK, then everything eplodes!
    08/12/10 - interpolation seems OK now, with simplifications (See #4).

1. WRITE NEW OUTPUT MESH FILE WHEN MESH HAS CHANGED AFTER MESH REFINEMENT
    07/12/10 - SEEMS TO BE WORKING NOW.
